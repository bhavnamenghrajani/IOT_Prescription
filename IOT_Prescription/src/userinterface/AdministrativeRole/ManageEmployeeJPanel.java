/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministrativeRole;

import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Organization.PatientOrganization;
import Business.Patient.Patient;
import Business.Person.Person;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bhavna Menghrajani
 */
public class ManageEmployeeJPanel extends javax.swing.JPanel {

    private OrganizationDirectory organizationDir;
    private JPanel userProcessContainer;
    private Pattern pattern;
    private Matcher matcher;
    private static final String EMAIL_PATTERN
            = "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
            + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";

    /**
     * Creates new form ManageEmployeeJPanel
     */
    public ManageEmployeeJPanel(JPanel userProcessContainer, OrganizationDirectory organizationDir) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organizationDir = organizationDir;
        pattern = Pattern.compile(EMAIL_PATTERN);
        populateOrganizationComboBox();
        populateOrganizationEmpComboBox();
    }

    public void populateOrganizationComboBox() {
        organizationJComboBox.removeAllItems();

        for (Organization organization : organizationDir.getOrganizationList()) {
            organizationJComboBox.addItem(organization);
        }
    }

    public void populateOrganizationEmpComboBox() {
        orgEmployeeJComboBox.removeAllItems();

        for (Organization organization : organizationDir.getOrganizationList()) {
            orgEmployeeJComboBox.addItem(organization);
        }
    }

    private void populateTable(Organization organization) {
        DefaultTableModel model = (DefaultTableModel) organizationJTable.getModel();

        model.setRowCount(0);

        for (Person person : organization.getPersonDirectory().getPersonList()) {
            Object[] row = new Object[3];
            row[0] = person.getId();
            row[1] = person.getFirstName();
            row[2] = person.getLastName();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        organizationJComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        organizationJTable = new javax.swing.JTable();
        orgEmployeeJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        btnCreateEmployee = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtEmailAddress = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        setLayout(null);

        organizationJComboBox.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        organizationJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationJComboBoxActionPerformed(evt);
            }
        });
        add(organizationJComboBox);
        organizationJComboBox.setBounds(334, 76, 320, 34);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel1.setText("Organization:");
        add(jLabel1);
        jLabel1.setBounds(100, 80, 160, 23);

        organizationJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Person ID", "FirstName", "LastName"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(organizationJTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(96, 140, 900, 180);

        orgEmployeeJComboBox.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        orgEmployeeJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        add(orgEmployeeJComboBox);
        orgEmployeeJComboBox.setBounds(330, 350, 270, 40);

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel2.setText("Organization");
        add(jLabel2);
        jLabel2.setBounds(100, 360, 140, 30);

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel3.setText("First Name: ");
        add(jLabel3);
        jLabel3.setBounds(100, 419, 100, 20);

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel4.setText("Last Name: ");
        add(jLabel4);
        jLabel4.setBounds(100, 470, 100, 19);

        txtFirstName.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        add(txtFirstName);
        txtFirstName.setBounds(330, 410, 270, 40);

        txtLastName.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        add(txtLastName);
        txtLastName.setBounds(330, 460, 270, 40);

        btnCreateEmployee.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnCreateEmployee.setText("Add Person");
        btnCreateEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateEmployeeActionPerformed(evt);
            }
        });
        add(btnCreateEmployee);
        btnCreateEmployee.setBounds(330, 570, 270, 35);

        btnBack.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(101, 31, 90, 31);

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel5.setText("Manage Organization Directory");
        add(jLabel5);
        jLabel5.setBounds(480, 20, 390, 31);

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel6.setText("Email Address: ");
        add(jLabel6);
        jLabel6.setBounds(100, 520, 110, 19);

        txtEmailAddress.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        add(txtEmailAddress);
        txtEmailAddress.setBounds(330, 510, 270, 40);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/background2.jpg"))); // NOI18N
        jLabel7.setText("jLabel7");
        add(jLabel7);
        jLabel7.setBounds(0, 0, 2000, 900);
    }// </editor-fold>//GEN-END:initComponents

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        // TODO add your handling code here:

        Organization organization = (Organization) organizationJComboBox.getSelectedItem();
        if (organization != null) {
            populateTable(organization);
        }
    }//GEN-LAST:event_organizationJComboBoxActionPerformed

    private void btnCreateEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateEmployeeActionPerformed
        // TODO add your handling code here:

        Organization organization = (Organization) orgEmployeeJComboBox.getSelectedItem();
        String firstName = txtFirstName.getText();
        String lastName = txtLastName.getText();
        String emailAddress = txtEmailAddress.getText();

        if (!(organization.checkIfFullNameisUnique(firstName, lastName))) {
            JOptionPane.showMessageDialog(null, "This name already exists in the organization. Please check the directory.");
            txtFirstName.setText("");
            txtLastName.setText("");
            return;

        }

        if (!emailAddress.equals("")) {

            if (emailAddress.matches(EMAIL_PATTERN)) {

                JOptionPane.showMessageDialog(null, "Valid Email Id");

            } else {

                JOptionPane.showMessageDialog(null, "Invalid Id");
                return;
            }
        }

        if (organization instanceof PatientOrganization) {
            Patient patient = new Patient();
            patient.setFirstName(firstName);
            patient.setLastName(lastName);
            patient.setEmailAddress(emailAddress);
            organization.getPersonDirectory().getPersonList().add(patient);

        } else {

            Person person = organization.getPersonDirectory().createPerson(firstName, lastName);
            person.setEmailAddress(emailAddress);
        }
        JOptionPane.showMessageDialog(null, "Employee has been added successfully");
        txtFirstName.setText("");
        txtLastName.setText("");
        txtEmailAddress.setText("");

        populateOrganizationComboBox();
        populateOrganizationEmpComboBox();

    }//GEN-LAST:event_btnCreateEmployeeActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCreateEmployee;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox orgEmployeeJComboBox;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JTable organizationJTable;
    private javax.swing.JTextField txtEmailAddress;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    // End of variables declaration//GEN-END:variables

}
