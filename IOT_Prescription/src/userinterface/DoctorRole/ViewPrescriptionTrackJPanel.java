/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import Business.Patient.Patient;
import Business.Prescription.DrugDosageTrack;
import Business.Prescription.DrugDosages;
import Business.Prescription.Frequency;
import Business.Prescription.FrequencyTrack;
import Business.Prescription.PrescriptionTrack;
import Business.Prescription.PrescriptionTrackHistory;
import java.awt.CardLayout;
import java.awt.Component;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bhavna Menghrajani
 */
public class ViewPrescriptionTrackJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Patient patient;
    private PrescriptionTrackHistory prescriptionTrackHistory;
    private SimpleDateFormat dateFormat;

    /**
     * Creates new form ViewPrescriptionTrackJPanel
     */
    public ViewPrescriptionTrackJPanel(JPanel userProcessContainer, Patient patient) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.patient = patient;
        prescriptionTrackHistory = patient.getPrescriptionTrackHistory();
        dateFormat = new SimpleDateFormat("EEE, MMM d, ''yy");
        populatePrescription();
    }

    public void populatePrescription() {
        DefaultTableModel dtm = (DefaultTableModel) prescriptionJTable.getModel();
        dtm.setRowCount(0);
        for (PrescriptionTrack prescriptionTrack : prescriptionTrackHistory.getPrescriptionTrack()) {
            Object r[] = new Object[6];
            r[0] = prescriptionTrack;
            r[1] = prescriptionTrack.getPrescription().getStatus();
            dtm.addRow(r);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblDrugdosage = new javax.swing.JTable();
        btnRetrieve = new javax.swing.JButton();
        btnTrackDetails = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        trackingJTable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        prescriptionJTable = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnShowGraph = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setLayout(null);

        tblDrugdosage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tracking Id", "Drug Name", "Start Date", "Morning", "Afternoon", "Evening", "Night", "No of days"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblDrugdosage);

        add(jScrollPane2);
        jScrollPane2.setBounds(40, 380, 811, 157);

        btnRetrieve.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnRetrieve.setText("View Dosages");
        btnRetrieve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetrieveActionPerformed(evt);
            }
        });
        add(btnRetrieve);
        btnRetrieve.setBounds(870, 80, 162, 39);

        btnTrackDetails.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnTrackDetails.setText("Track details");
        btnTrackDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrackDetailsActionPerformed(evt);
            }
        });
        add(btnTrackDetails);
        btnTrackDetails.setBounds(870, 380, 160, 40);

        trackingJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date taken", "Morning", "Afternoon", "Evening", "Night"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(trackingJTable);
        if (trackingJTable.getColumnModel().getColumnCount() > 0) {
            trackingJTable.getColumnModel().getColumn(0).setMaxWidth(350);
            trackingJTable.getColumnModel().getColumn(1).setMaxWidth(120);
            trackingJTable.getColumnModel().getColumn(2).setMaxWidth(100);
            trackingJTable.getColumnModel().getColumn(3).setMaxWidth(100);
            trackingJTable.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        add(jScrollPane3);
        jScrollPane3.setBounds(40, 590, 710, 261);

        prescriptionJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Prescription_Id", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(prescriptionJTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(40, 80, 811, 249);

        btnBack.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnBack.setText("Go Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(40, 20, 109, 31);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel1.setText("Drug tracking information:");
        add(jLabel1);
        jLabel1.setBounds(50, 560, 175, 19);

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel2.setText("View Prescriptions");
        add(jLabel2);
        jLabel2.setBounds(400, 20, 220, 40);

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel3.setText("Dosage details:");
        add(jLabel3);
        jLabel3.setBounds(50, 350, 170, 19);

        btnShowGraph.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnShowGraph.setText("Show Graph");
        btnShowGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowGraphActionPerformed(evt);
            }
        });
        add(btnShowGraph);
        btnShowGraph.setBounds(880, 590, 160, 40);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/background2.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");
        add(jLabel4);
        jLabel4.setBounds(0, 0, 1970, 1000);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRetrieveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetrieveActionPerformed
        // TODO add your handling code here:

        DefaultTableModel model = (DefaultTableModel) tblDrugdosage.getModel();
        model.setRowCount(0);

        int row = prescriptionJTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select an entry form the table", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        PrescriptionTrack pt = (PrescriptionTrack) prescriptionJTable.getValueAt(row, 0);
        for (DrugDosageTrack ddt : pt.getDrugDosageTrackList()) {
            Object r[] = new Object[8];
            r[0] = ddt;
            r[1] = ddt.getDrugDosages().getDrug();
            r[2] = dateFormat.format(ddt.getDrugDosages().getStartDate());
            r[3] = ddt.getDrugDosages().getFrequency().getMorning();
            r[4] = ddt.getDrugDosages().getFrequency().getAfternoon();
            r[5] = ddt.getDrugDosages().getFrequency().getEvening();
            r[6] = ddt.getDrugDosages().getFrequency().getNight();
            r[7] = ddt.getDrugDosages().getNoOfDays();
            model.addRow(r);

        }

        //  DrugDosageTrack drug = (Drug) tblMasterCatalog.getValueAt(row, 0);
    }//GEN-LAST:event_btnRetrieveActionPerformed

    private void btnTrackDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrackDetailsActionPerformed
        // TODO add your handling code here:

        displayTrackingTable();
    }//GEN-LAST:event_btnTrackDetailsActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        backAction();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnShowGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowGraphActionPerformed
        // TODO add your handling code here:

        int row = tblDrugdosage.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select an entry form the table", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        DrugDosageTrack drugDosageTrack = (DrugDosageTrack) tblDrugdosage.getValueAt(row, 0);

        TrackDiagnosisStatusJPanel trackDiagnosisStatusJPanel = new TrackDiagnosisStatusJPanel(userProcessContainer, drugDosageTrack);
        userProcessContainer.add("trackDiagnosisStatusJPanel", trackDiagnosisStatusJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_btnShowGraphActionPerformed

    public void backAction() {
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        DoctorWorkAreaPanel doctorWorkAreaPanel = (DoctorWorkAreaPanel) component;
        doctorWorkAreaPanel.populatePatientComboBox();

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }

    public void readCSV() {
        int row = tblDrugdosage.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select an entry form the table", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        DrugDosageTrack ddt = (DrugDosageTrack) tblDrugdosage.getValueAt(row, 0);

        String csvFileToRead = System.getProperty("user.dir") + "\\csvfile\\datafromsensor.csv";
        BufferedReader br = null;
        String line = "";
        String splitBy = ",";

        try {

            br = new BufferedReader(new FileReader(csvFileToRead));
            while ((line = br.readLine()) != null) {

                FrequencyTrack frequencyTrack = new FrequencyTrack();

                String[] sensed = line.split(splitBy);
                try {
                    frequencyTrack.setDateDrugTaken(dateFormat.parse(sensed[0]));
                } catch (ParseException ex) {
                    Logger.getLogger(ViewPrescriptionTrackJPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
                frequencyTrack.getFrequency().setMorning(Integer.parseInt(sensed[1]));
                frequencyTrack.getFrequency().setAfternoon(Integer.parseInt(sensed[2]));
                frequencyTrack.getFrequency().setEvening(Integer.parseInt(sensed[3]));
                System.out.println("Data: " + sensed[3]);
                frequencyTrack.getFrequency().setNight(Integer.parseInt(sensed[4]));
                ddt.getFrequencyTrackList().add(frequencyTrack);

            }

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if (br != null) {
                try {
                    br.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }

    }

    public void displayTrackingTable() {
        int row = tblDrugdosage.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select an entry form the table", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        DrugDosageTrack drugDosageTrack = (DrugDosageTrack) tblDrugdosage.getValueAt(row, 0);
        DefaultTableModel dtm = (DefaultTableModel) trackingJTable.getModel();
        dtm.setRowCount(0);
        for (FrequencyTrack ft : drugDosageTrack.getFrequencyTrackList()) {
            Object r[] = new Object[5];
            r[0] = dateFormat.format(ft.getDateDrugTaken());
            r[1] = ft.getFrequency().getMorning();
            r[2] = ft.getFrequency().getAfternoon();
            r[3] = ft.getFrequency().getEvening();
            r[4] = ft.getFrequency().getNight();

            dtm.addRow(r);

        }

        DrugDosages drugDosage = drugDosageTrack.getDrugDosages();
        Frequency f = drugDosage.getFrequency();
        for (int tc = 1; tc < trackingJTable.getColumnCount(); tc++) {
            for (int tr = 0; tr < trackingJTable.getRowCount(); tr++) {
                if (tc == 1) {
                    if ((Integer) trackingJTable.getValueAt(tr, tc) != f.getMorning()) {
                        trackingJTable.setValueAt("<html><h3><b><font color=\"red\">" + trackingJTable.getValueAt(tr, tc) + "</font></b></h3></html>", tr, tc);
                    }
                }
                if (tc == 2) {
                    if ((Integer) trackingJTable.getValueAt(tr, tc) != f.getAfternoon()) {
                        trackingJTable.setValueAt("<html><h3><b><font color=\"red\">" + trackingJTable.getValueAt(tr, tc) + "</font></b></h3></html>", tr, tc);

                    }

                }
                if (tc == 3) {
                    if ((Integer) trackingJTable.getValueAt(tr, tc) != f.getEvening()) {
                        trackingJTable.setValueAt("<html><h3><b><font color=\"red\">" + trackingJTable.getValueAt(tr, tc) + "</font></b></h3></html>", tr, tc);

                    }

                }
                if (tc == 4) {
                    if ((Integer) trackingJTable.getValueAt(tr, tc) != f.getNight()) {
                        trackingJTable.setValueAt("<html><h3><b><font color=\"red\">" + trackingJTable.getValueAt(tr, tc) + "</font></b></h3></html>", tr, tc);

                    }
                }

            }

        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRetrieve;
    private javax.swing.JButton btnShowGraph;
    private javax.swing.JButton btnTrackDetails;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable prescriptionJTable;
    private javax.swing.JTable tblDrugdosage;
    private javax.swing.JTable trackingJTable;
    // End of variables declaration//GEN-END:variables

}
