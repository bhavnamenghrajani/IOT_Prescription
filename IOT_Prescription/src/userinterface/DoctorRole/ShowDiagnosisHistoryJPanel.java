/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import static Business.Organization.Organization.Type.Patient;
import Business.Patient.Patient;
import Business.Prescription.Diagnosis;
import Business.Prescription.DrugDosages;
import Business.Prescription.Prescription;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bhavna Menghrajani
 */
public class ShowDiagnosisHistoryJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Patient patient;
    private SimpleDateFormat dateFormat;

    /**
     * Creates new form ShowDiagnosisHistoryJPanel
     */
    public ShowDiagnosisHistoryJPanel(JPanel userProcessContainer, Patient patient) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.patient = patient;
        populateDiagnosisHistory();
        dateFormat = new SimpleDateFormat("EEE, MMM d, ''yy");
        lblPatientName.setText(patient.getFirstName() + " " + patient.getLastName());

    }

    public void populateDiagnosisHistory() {
        DefaultTableModel dtm = (DefaultTableModel) tblDiagnosisHistory.getModel();
        dtm.setRowCount(0);

        for (Diagnosis d : patient.getDiagnosisHistory().getDiagnosisHistoryList()) {
            Object row[] = new Object[3];
            row[0] = d;
            row[1] = d.getStartDate();
            row[2] = d.getStatus();
            dtm.addRow(row);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDiagnosisHistory = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        prescriptionJTable = new javax.swing.JTable();
        btnShowPrescription = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnMarkComplete = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lblPatientName = new javax.swing.JLabel();
        comboStatus = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setLayout(null);

        tblDiagnosisHistory.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        tblDiagnosisHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Diagnosis ID", "Diagnosis Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDiagnosisHistory);
        if (tblDiagnosisHistory.getColumnModel().getColumnCount() > 0) {
            tblDiagnosisHistory.getColumnModel().getColumn(0).setPreferredWidth(100);
            tblDiagnosisHistory.getColumnModel().getColumn(0).setMaxWidth(120);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(60, 170, 940, 168);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel1.setText("Diagnosis History:");
        add(jLabel1);
        jLabel1.setBounds(60, 130, 170, 23);

        prescriptionJTable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        prescriptionJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug Name", "Morning", "Afternoon", "Evening", "Night", "Start Date", "No of days"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(prescriptionJTable);
        if (prescriptionJTable.getColumnModel().getColumnCount() > 0) {
            prescriptionJTable.getColumnModel().getColumn(1).setMaxWidth(120);
            prescriptionJTable.getColumnModel().getColumn(2).setMaxWidth(120);
            prescriptionJTable.getColumnModel().getColumn(3).setMaxWidth(120);
            prescriptionJTable.getColumnModel().getColumn(4).setMaxWidth(120);
            prescriptionJTable.getColumnModel().getColumn(6).setMaxWidth(120);
        }

        add(jScrollPane2);
        jScrollPane2.setBounds(60, 480, 860, 240);

        btnShowPrescription.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnShowPrescription.setText("Show Prescription");
        btnShowPrescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowPrescriptionActionPerformed(evt);
            }
        });
        add(btnShowPrescription);
        btnShowPrescription.setBounds(780, 370, 217, 40);

        btnBack.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(62, 38, 90, 31);

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel2.setText("Drug Dosages:");
        add(jLabel2);
        jLabel2.setBounds(60, 440, 160, 23);

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel3.setText("Diagnosis History");
        add(jLabel3);
        jLabel3.setBounds(410, 40, 220, 31);

        btnMarkComplete.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnMarkComplete.setText("Change Status");
        btnMarkComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMarkCompleteActionPerformed(evt);
            }
        });
        add(btnMarkComplete);
        btnMarkComplete.setBounds(480, 370, 198, 40);

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel4.setText("Patient name:");
        add(jLabel4);
        jLabel4.setBounds(60, 90, 94, 19);

        lblPatientName.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblPatientName.setText("<<>>");
        add(lblPatientName);
        lblPatientName.setBounds(200, 90, 210, 19);

        comboStatus.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        comboStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Completed", "Cancelled", "Side Affects", "Critical condition" }));
        comboStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboStatusActionPerformed(evt);
            }
        });
        add(comboStatus);
        comboStatus.setBounds(270, 370, 180, 40);

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel5.setText("OR");
        add(jLabel5);
        jLabel5.setBounds(710, 380, 17, 16);

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel6.setText("Change Diagnosis status");
        add(jLabel6);
        jLabel6.setBounds(70, 380, 164, 40);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/background2.jpg"))); // NOI18N
        jLabel7.setText("jLabel7");
        add(jLabel7);
        jLabel7.setBounds(0, 0, 2000, 1000);
    }// </editor-fold>//GEN-END:initComponents

    private void btnShowPrescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowPrescriptionActionPerformed
        // TODO add your handling code here:
        int row = tblDiagnosisHistory.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select an entry form the table", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        Diagnosis diagnosis = (Diagnosis) tblDiagnosisHistory.getValueAt(row, 0);
        Prescription prescription = diagnosis.getPrescription();
        DefaultTableModel dtm = (DefaultTableModel) prescriptionJTable.getModel();
        dtm.setRowCount(0);
        for (DrugDosages dd : prescription.getDrugDosagesList()) {
            Object r[] = new Object[7];
            r[0] = dd.getDrug().getDrugName();
            r[1] = dd.getFrequency().getMorning();
            r[2] = dd.getFrequency().getAfternoon();
            r[3] = dd.getFrequency().getEvening();
            r[4] = dd.getFrequency().getNight();
            r[5] = dateFormat.format(dd.getStartDate());
            r[6] = dd.getNoOfDays();

            dtm.addRow(r);

        }


    }//GEN-LAST:event_btnShowPrescriptionActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        backAction();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnMarkCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMarkCompleteActionPerformed
        // TODO add your handling code here:

        int row = tblDiagnosisHistory.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select an entry form the table", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        Diagnosis diagnosis = (Diagnosis) tblDiagnosisHistory.getValueAt(row, 0);

        if (!(diagnosis.getStatus().equals("Ongoing"))) {
            JOptionPane.showMessageDialog(null, "This is not an ongoing prescription. The status cannot be changed ", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        String status = (String) comboStatus.getSelectedItem();

        diagnosis.setStatus(status);
        JOptionPane.showMessageDialog(null, "You have marked the selected diagnosis as: " + status);
        populateDiagnosisHistory();

        diagnosis.getPrescription().setStatus(status);

    }//GEN-LAST:event_btnMarkCompleteActionPerformed

    private void comboStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboStatusActionPerformed

    public void backAction() {
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        DoctorWorkAreaPanel doctorWorkAreaPanel = (DoctorWorkAreaPanel) component;
        doctorWorkAreaPanel.populatePatientComboBox();

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnMarkComplete;
    private javax.swing.JButton btnShowPrescription;
    private javax.swing.JComboBox comboStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JTable prescriptionJTable;
    private javax.swing.JTable tblDiagnosisHistory;
    // End of variables declaration//GEN-END:variables

}
