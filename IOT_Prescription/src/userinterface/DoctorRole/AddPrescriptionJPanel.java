/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import Business.Doctor.Doctor;
import Business.Drug.Drug;
import Business.Drug.DrugItem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.SupplierEnterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Organization.SupplierOrganization;
import Business.Patient.Patient;
import Business.Person.Person;
import Business.Prescription.Diagnosis;
import Business.Prescription.DrugDosageTrack;
import Business.Prescription.DrugDosages;
import Business.Prescription.DrugItems;
import Business.Prescription.Frequency;
import Business.Prescription.Prescription;
import Business.Prescription.PrescriptionTrack;
import Business.Prescription.PrescriptionTrackHistory;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.table.DefaultTableModel;
import userinterface.PatientRole.DrugsRequestStatusJPanel;

/**
 *
 * @author Bhavna Menghrajani
 */
public class AddPrescriptionJPanel extends javax.swing.JPanel {

    private static final String COMMA_DELIMITER = ",";
    private static final String NEW_LINE_SEPARATOR = "\n";
    private static final String FILE_HEADER = "Date_taken,Drug_ID,Drug_Name,Morning,Afternoon,Evening,Night";

    private JPanel userProcessContainer;
    private DoctorOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private Network network;
    private Person doctor;
    private Patient patient;
    private Prescription prescription;
    private PrescriptionTrackHistory prescriptionTrackHistory;
    private PrescriptionTrack pt;
    private SimpleDateFormat dateFormat;

    /**
     * Creates new form AddPrescriptionJPanel
     */
    public AddPrescriptionJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, Network network, Person doctor, Patient patient) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.network = network;
        this.doctor = doctor;
        this.patient = patient;
        populateSupplierComboBox();
        populateDrugComboBox();
        dateFormat = new SimpleDateFormat("EEE, MMM d, ''yy");
        prescription = new Prescription();
        prescriptionTrackHistory = patient.getPrescriptionTrackHistory();
        lblDoctorName.setText(doctor.getFirstName() + " " + doctor.getLastName());
        lblPatientName.setText(patient.getFirstName() + " " + patient.getLastName());

    }

    public static void createCSVFile(String fileName) {
        FileWriter fileWriter = null;

        try {
            fileWriter = new FileWriter(fileName);
            fileWriter.append(FILE_HEADER.toString());
            fileWriter.append(NEW_LINE_SEPARATOR);

        } catch (IOException ex) {
            Logger.getLogger(AddPrescriptionJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void populateSupplierComboBox() {
        supplierJComboBox.removeAllItems();
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (enterprise instanceof SupplierEnterprise) {

                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    supplierJComboBox.addItem(organization);

                }

            }
        }
        populateDrugComboBox();

    }

    public void populateDrugComboBox() {

        drugComboBox.removeAllItems();
        SupplierOrganization sp = (SupplierOrganization) supplierJComboBox.getSelectedItem();

        for (Drug d : sp.getDrugCatalog().getDrugCatalog()) {

            drugComboBox.addItem(d);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        afternoonSpinner = new javax.swing.JSpinner();
        eveningSpinner = new javax.swing.JSpinner();
        nightSpinner = new javax.swing.JSpinner();
        daySpinner = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPrescription = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        supplierJComboBox = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        drugComboBox = new javax.swing.JComboBox();
        morningCheckBox = new javax.swing.JCheckBox();
        afternoonCheckBox = new javax.swing.JCheckBox();
        eveningCheckBox = new javax.swing.JCheckBox();
        nightCheckBox = new javax.swing.JCheckBox();
        morningSpinner = new javax.swing.JSpinner();
        btnAdd = new javax.swing.JButton();
        btnCompletePrescription = new javax.swing.JButton();
        startDateJDateChooser = new com.toedter.calendar.JDateChooser();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblDoctorName = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblPatientName = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setLayout(null);
        add(afternoonSpinner);
        afternoonSpinner.setBounds(410, 280, 65, 33);
        add(eveningSpinner);
        eveningSpinner.setBounds(540, 280, 65, 33);
        add(nightSpinner);
        nightSpinner.setBounds(650, 280, 65, 33);
        add(daySpinner);
        daySpinner.setBounds(760, 280, 65, 33);

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel6.setText("No of days");
        add(jLabel6);
        jLabel6.setBounds(760, 240, 78, 30);

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel7.setText("Start Date:");
        add(jLabel7);
        jLabel7.setBounds(60, 240, 68, 19);

        tblPrescription.setFont(new java.awt.Font("Century Gothic", 2, 14)); // NOI18N
        tblPrescription.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug Name", "Morning ", "Afternoon", "Evening", "Night", "Start Date", "No of days"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPrescription);
        if (tblPrescription.getColumnModel().getColumnCount() > 0) {
            tblPrescription.getColumnModel().getColumn(1).setMaxWidth(120);
            tblPrescription.getColumnModel().getColumn(2).setMaxWidth(120);
            tblPrescription.getColumnModel().getColumn(3).setMaxWidth(120);
            tblPrescription.getColumnModel().getColumn(4).setMaxWidth(120);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(60, 460, 940, 200);

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel8.setText("Select Supplier: ");
        add(jLabel8);
        jLabel8.setBounds(60, 160, 108, 19);

        supplierJComboBox.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        supplierJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierJComboBoxActionPerformed(evt);
            }
        });
        add(supplierJComboBox);
        supplierJComboBox.setBounds(230, 140, 230, 40);

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel5.setText("Select Drug:");
        add(jLabel5);
        jLabel5.setBounds(640, 160, 81, 19);

        drugComboBox.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        drugComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drugComboBoxActionPerformed(evt);
            }
        });
        add(drugComboBox);
        drugComboBox.setBounds(770, 140, 230, 40);

        morningCheckBox.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        morningCheckBox.setText("Morning");
        morningCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                morningCheckBoxActionPerformed(evt);
            }
        });
        add(morningCheckBox);
        morningCheckBox.setBounds(290, 240, 83, 27);

        afternoonCheckBox.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        afternoonCheckBox.setText("Afternoon");
        add(afternoonCheckBox);
        afternoonCheckBox.setBounds(400, 240, 93, 27);

        eveningCheckBox.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        eveningCheckBox.setText("Evening");
        add(eveningCheckBox);
        eveningCheckBox.setBounds(530, 240, 81, 27);

        nightCheckBox.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        nightCheckBox.setText("Night");
        nightCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nightCheckBoxActionPerformed(evt);
            }
        });
        add(nightCheckBox);
        nightCheckBox.setBounds(650, 240, 63, 27);
        add(morningSpinner);
        morningSpinner.setBounds(290, 280, 65, 33);

        btnAdd.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnAdd.setText("Add dosages");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        add(btnAdd);
        btnAdd.setBounds(890, 270, 121, 41);

        btnCompletePrescription.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnCompletePrescription.setText("Complete Prescription");
        btnCompletePrescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompletePrescriptionActionPerformed(evt);
            }
        });
        add(btnCompletePrescription);
        btnCompletePrescription.setBounds(400, 360, 214, 45);
        add(startDateJDateChooser);
        startDateJDateChooser.setBounds(60, 283, 200, 30);

        btnBack.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(51, 29, 90, 30);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel1.setText("Add Prescription");
        add(jLabel1);
        jLabel1.setBounds(460, 20, 230, 40);

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel2.setText("Doctor Name: ");
        add(jLabel2);
        jLabel2.setBounds(60, 100, 99, 19);

        lblDoctorName.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblDoctorName.setText("<<>>");
        add(lblDoctorName);
        lblDoctorName.setBounds(230, 89, 190, 30);

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel3.setText("Patient Name:");
        add(jLabel3);
        jLabel3.setBounds(680, 90, 96, 19);

        lblPatientName.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        lblPatientName.setText("<<>>");
        add(lblPatientName);
        lblPatientName.setBounds(840, 79, 190, 30);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/background2.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");
        add(jLabel4);
        jLabel4.setBounds(0, 0, 1940, 960);
    }// </editor-fold>//GEN-END:initComponents

    private void supplierJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierJComboBoxActionPerformed
        // TODO add your handling code here:
        populateDrugComboBox();
    }//GEN-LAST:event_supplierJComboBoxActionPerformed

    private void morningCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_morningCheckBoxActionPerformed
        // TODO add your handling code here

        if (morningCheckBox.isSelected() == true) {
            ((JSpinner.DefaultEditor) morningSpinner.getEditor()).getTextField().setEditable(true);

        } else {
            ((JSpinner.DefaultEditor) morningSpinner.getEditor()).getTextField().setEditable(false);
        }


    }//GEN-LAST:event_morningCheckBoxActionPerformed

    private void nightCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nightCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nightCheckBoxActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        Drug d = (Drug) drugComboBox.getSelectedItem();
        if (d == null) {
            JOptionPane.showMessageDialog(null, "Please select valid drug");
            return;
        }
        for (Diagnosis diag : patient.getDiagnosisHistory().getDiagnosisHistoryList()) {
            if (diag.getStatus().equals("Ongoing")) {
                for (DrugDosages dd : diag.getPrescription().getDrugDosagesList()) {
                    if (dd.getDrug() == d) {
                        JOptionPane.showMessageDialog(null, "The drug is already prescribed in the previous diagnosis: " + diag.getDiagnosis_Id());
                        return;
                    }

                }

            }

        }

        for (DrugDosages drugDosages : prescription.getDrugDosagesList()) {
            if (drugDosages.getDrug() == d) {
                JOptionPane.showMessageDialog(null, "This drug has already been prescribed in the current prescription");
                return;
            }

        }

        if (!checkSpinner()) {
            return;

        }
        DrugDosages drugDosage = prescription.createDrugDosages();
        drugDosage.setDrug(d);
        drugDosage.setStartDate(startDateJDateChooser.getDate());
        Frequency f = drugDosage.getFrequency();

        if (morningCheckBox.isSelected() == true) {
            f.setMorning((Integer) morningSpinner.getValue());

        }
        if (afternoonCheckBox.isSelected() == true) {
            f.setAfternoon((Integer) afternoonSpinner.getValue());
        }
        if (eveningCheckBox.isSelected() == true) {
            f.setEvening((Integer) eveningSpinner.getValue());
        }
        if (nightCheckBox.isSelected() == true) {

            f.setNight((Integer) nightSpinner.getValue());
        }

        drugDosage.setNoOfDays((Integer) daySpinner.getValue());
        JOptionPane.showMessageDialog(null, "Drug dosage has been added succesfully");
        populatePrescription();
    }//GEN-LAST:event_btnAddActionPerformed

    public boolean checkSpinner() {

        if (!morningCheckBox.isSelected() && !afternoonCheckBox.isSelected() && !eveningCheckBox.isSelected() && !nightCheckBox.isSelected()) {
            JOptionPane.showMessageDialog(null, "You need to provide atleast one dose per day for this drug");
            return false;
        }
        int morning = (Integer) morningSpinner.getValue();
        int afternoon = (Integer) afternoonSpinner.getValue();
        int evening = (Integer) eveningSpinner.getValue();
        int night = (Integer) nightSpinner.getValue();
        int noOfDays = (Integer) daySpinner.getValue();
        Date startDate = startDateJDateChooser.getDate();
        Date currentDate = new Date(System.currentTimeMillis() - 24 * 60 * 60 * 1000);
        if (morningCheckBox.isSelected() == true) {
            System.out.println("Morning:" + morning);
            if (morning <= 0) {
                JOptionPane.showMessageDialog(null, "Please select valid dosage amount for morning time");
                return false;
            }

        }
        if (afternoonCheckBox.isSelected() == true) {
            if (afternoon <= 0) {
                JOptionPane.showMessageDialog(null, "Please select valid dosage amount for afternoon time");
                return false;
            }
        }
        if (eveningCheckBox.isSelected() == true) {
            if (evening <= 0) {
                JOptionPane.showMessageDialog(null, "Please select valid dosage amount for evening time");
                return false;
            }
        }
        if (nightCheckBox.isSelected() == true) {

            if (night <= 0) {
                JOptionPane.showMessageDialog(null, "Please select valid dosage amount for night time");
                return false;
            }
        }

        if (noOfDays <= 0) {
            JOptionPane.showMessageDialog(null, "Please enter valid no. of days for the current prescription");
            return false;

        }

        if (startDate.before(currentDate)) {
            JOptionPane.showMessageDialog(null, "Start date cannot be a date in history.");
            return false;
        }

        return true;
    }

    public void populatePrescription() {
        DefaultTableModel dtm = (DefaultTableModel) tblPrescription.getModel();
        dtm.setRowCount(0);

        for (DrugDosages dd : prescription.getDrugDosagesList()) {
            Object row[] = new Object[7];
            row[0] = dd.getDrug().getDrugName();
            row[1] = dd.getFrequency().getMorning();
            row[2] = dd.getFrequency().getAfternoon();
            row[3] = dd.getFrequency().getEvening();
            row[4] = dd.getFrequency().getNight();
            row[5] = dateFormat.format(dd.getStartDate());
            row[6] = dd.getNoOfDays();

            dtm.addRow(row);

        }

    }


    private void btnCompletePrescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompletePrescriptionActionPerformed
        // TODO add your handling code here:

        if (prescription.getDrugDosagesList().size() <= 0) {
            JOptionPane.showMessageDialog(null, "No drug have been added yet in the prescription. Please provide atleast one drug doasge in the prescription.");
            return;

        }
        Diagnosis diagnosis = patient.getDiagnosisHistory().createDiagnosis();
        diagnosis.setPrescription(prescription);
        diagnosis.setStatus("Ongoing");
        diagnosis.setStartDate(new Date());
        diagnosis.setDoctor(doctor);
        prescription.setStatus("Initiated");
        pt = prescriptionTrackHistory.createPrescriptionTrack();
        pt.setPrescription(prescription);
        for (DrugDosages dd : prescription.getDrugDosagesList()) {
            DrugDosageTrack ddt = new DrugDosageTrack();
            pt.getDrugDosageTrackList().add(ddt);
            ddt.setDrugDosages(dd);
            ddt.setDrug(dd.getDrug());

        }
        boolean found = false;
        for (DrugDosages dd : prescription.getDrugDosagesList()) {
            for (DrugItems di : patient.getDrugContents().getDrugItemList()) {
                if ((di.getDrugItem().getDrug() == dd.getDrug())) {
                    found = true;

                }

            }

            if (!found) {
                System.out.println("Populating the contents");
                DrugItems drugItem = patient.getDrugContents().createDrugItems();

                DrugItem drugI = new DrugItem();
                drugI.setDrug(dd.getDrug());
                drugItem.setDrugItem(drugI);

                found = false;

            }
        }

        JOptionPane.showMessageDialog(null, "Completed");
        populatePrescription();

    }//GEN-LAST:event_btnCompletePrescriptionActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:

        backAction();
    }//GEN-LAST:event_btnBackActionPerformed

    private void drugComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drugComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drugComboBoxActionPerformed

    public void backAction() {
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        DoctorWorkAreaPanel doctorWorkAreaPanel = (DoctorWorkAreaPanel) component;
        doctorWorkAreaPanel.populatePatientComboBox();

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox afternoonCheckBox;
    private javax.swing.JSpinner afternoonSpinner;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCompletePrescription;
    private javax.swing.JSpinner daySpinner;
    private javax.swing.JComboBox drugComboBox;
    private javax.swing.JCheckBox eveningCheckBox;
    private javax.swing.JSpinner eveningSpinner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDoctorName;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JCheckBox morningCheckBox;
    private javax.swing.JSpinner morningSpinner;
    private javax.swing.JCheckBox nightCheckBox;
    private javax.swing.JSpinner nightSpinner;
    private com.toedter.calendar.JDateChooser startDateJDateChooser;
    private javax.swing.JComboBox supplierJComboBox;
    private javax.swing.JTable tblPrescription;
    // End of variables declaration//GEN-END:variables

}
