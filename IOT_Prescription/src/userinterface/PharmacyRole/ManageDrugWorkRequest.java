/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PharmacyRole;

import Business.Drug.Drug;
import Business.Drug.DrugInventory;
import Business.Drug.DrugItem;
import Business.Organization.PharmacyOrganization;
import Business.Patient.Patient;
import Business.Prescription.DrugContents;
import Business.Prescription.DrugDosages;
import Business.Prescription.DrugItems;
import Business.Prescription.Prescription;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AddDrugWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bhavna Menghrajani
 */
public class ManageDrugWorkRequest extends javax.swing.JPanel {

    private UserAccount pharmacistUserAccount;
    private PharmacyOrganization pharmacyOrganization;
    private JPanel userProcessContainer;
    Patient patient;
    DrugContents drugcontents;

    private DrugInventory drugInventory;

    private ArrayList<DrugItem> drugItemList;
    private ArrayList<DrugItem> addedDrugItems;

    /**
     * Creates new form ManageDrugWorkRequest
     */
    public ManageDrugWorkRequest(UserAccount userAccount, PharmacyOrganization pharmacyOrganization, JPanel userProcessContainer) {
        initComponents();
        this.pharmacistUserAccount = userAccount;
        this.pharmacyOrganization = pharmacyOrganization;
        this.userProcessContainer = userProcessContainer;
        addedDrugItems = new ArrayList<>();
        populateDrugRequest();
        drugInventory = pharmacyOrganization.getDrugInventory();
    }

    public void populateDrugRequest() {
        DefaultTableModel model = (DefaultTableModel) tblWorkRequest.getModel();

        model.setRowCount(0);

        for (WorkRequest request : pharmacyOrganization.getWorkQueue().getWorkRequestList()) {
            if (request instanceof AddDrugWorkRequest) {
                Object[] row = new Object[6];
                row[0] = request;
                row[1] = request.getSender().getPerson().getFirstName();
                row[2] = request.getReceiver() == null ? null : request.getReceiver().getPerson().getFirstName();
                row[3] = request.getRequestDate();
                row[4] = request.getMessage();
                row[5] = request.getStatus();

                model.addRow(row);

            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblWorkRequest = new javax.swing.JTable();
        btnShowRequest = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        dosageJTable = new javax.swing.JTable();
        quantitySpinner = new javax.swing.JSpinner();
        btnAddDrugs = new javax.swing.JButton();
        btnCompleteRequest = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnAssign = new javax.swing.JButton();
        btnShowPrescription = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setLayout(null);

        tblWorkRequest.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        tblWorkRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug Request", "Patient", "Receiver", "Request Date", "Message", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblWorkRequest);
        if (tblWorkRequest.getColumnModel().getColumnCount() > 0) {
            tblWorkRequest.getColumnModel().getColumn(0).setMinWidth(0);
            tblWorkRequest.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblWorkRequest.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(25, 144, 810, 240);

        btnShowRequest.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnShowRequest.setText("Show Request");
        btnShowRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowRequestActionPerformed(evt);
            }
        });
        add(btnShowRequest);
        btnShowRequest.setBounds(842, 144, 210, 41);

        dosageJTable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        dosageJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug Dosages", "Drug Id", "Start Date", "Quantity Added"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(dosageJTable);
        if (dosageJTable.getColumnModel().getColumnCount() > 0) {
            dosageJTable.getColumnModel().getColumn(0).setMinWidth(0);
            dosageJTable.getColumnModel().getColumn(0).setPreferredWidth(0);
            dosageJTable.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        add(jScrollPane2);
        jScrollPane2.setBounds(25, 425, 810, 188);

        quantitySpinner.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        add(quantitySpinner);
        quantitySpinner.setBounds(842, 514, 60, 31);

        btnAddDrugs.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnAddDrugs.setText("Add");
        btnAddDrugs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDrugsActionPerformed(evt);
            }
        });
        add(btnAddDrugs);
        btnAddDrugs.setBounds(940, 514, 110, 31);

        btnCompleteRequest.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnCompleteRequest.setText("Complete Request");
        btnCompleteRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompleteRequestActionPerformed(evt);
            }
        });
        add(btnCompleteRequest);
        btnCompleteRequest.setBounds(842, 574, 210, 39);

        btnBack.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(25, 85, 110, 31);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel1.setText("Manage Drug Work Request");
        add(jLabel1);
        jLabel1.setBounds(433, 27, 340, 31);

        btnAssign.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnAssign.setText("Assign this to me");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        add(btnAssign);
        btnAssign.setBounds(842, 259, 210, 41);

        btnShowPrescription.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnShowPrescription.setText("Show Prescription");
        btnShowPrescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowPrescriptionActionPerformed(evt);
            }
        });
        add(btnShowPrescription);
        btnShowPrescription.setBounds(842, 198, 210, 43);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/background2.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        add(jLabel2);
        jLabel2.setBounds(0, 0, 1950, 970);
    }// </editor-fold>//GEN-END:initComponents

    private void btnShowRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowRequestActionPerformed
        // TODO add your handling code here:

        int row = tblWorkRequest.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select an entry form the table", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        AddDrugWorkRequest adwr = (AddDrugWorkRequest) tblWorkRequest.getValueAt(row, 0);
        drugItemList = adwr.getDrugItemList();
        UserAccount ua = adwr.getSender();
        patient = (Patient) ua.getPerson();
        drugcontents = patient.getDrugContents();
        Prescription prescription = adwr.getPrescription();
        // drugItemList = adwr.getDrugItemList();
        DefaultTableModel dtm = (DefaultTableModel) dosageJTable.getModel();
        dtm.setRowCount(0);
        for (DrugItem di : drugItemList) {
            Object r[] = new Object[4];
            r[0] = di;
            r[1] = di.getDrug().getDrugId();
            r[2] = di.getDrug().getDrugName();
            r[3] = di.getQuantity();

            dtm.addRow(r);
        }


    }//GEN-LAST:event_btnShowRequestActionPerformed

    private void btnAddDrugsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDrugsActionPerformed
        // TODO add your handling code here:

        int requestRow = tblWorkRequest.getSelectedRow();
        if (requestRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select an entry form the Request table", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        AddDrugWorkRequest adwr = (AddDrugWorkRequest) tblWorkRequest.getValueAt(requestRow, 0);
        if ((adwr.getStatus().equals("Drugs Delivered")) || adwr.getStatus().equals("Fulfilled")) {
            JOptionPane.showMessageDialog(null, "The request has already been processed", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;

        }
        if (adwr.getStatus().equals("In progress")) {
            if (adwr.getReceiver() != pharmacistUserAccount) {
                JOptionPane.showMessageDialog(null, "The request is been worked upon by: " + adwr.getReceiver().getPerson().getFirstName() + " Please process another request", "Information", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

        }

        if (adwr.getStatus().equals("In progress")) {

            int quantity = (Integer) (quantitySpinner.getValue());
            int row = dosageJTable.getSelectedRow();
            if (row < 0) {
                JOptionPane.showMessageDialog(null, "Please select an entry form the table", "Information", JOptionPane.INFORMATION_MESSAGE);
                return;
            }

            if (quantity <= 0) {
                JOptionPane.showMessageDialog(null, "Please add atleast one quantity", "Information", JOptionPane.INFORMATION_MESSAGE);
                return;

            }

            DrugItem di = (DrugItem) dosageJTable.getValueAt(row, 0);

            Drug drug = di.getDrug();

            for (DrugItem invDrugItem : drugInventory.getDrugInventory()) {

                if (invDrugItem.getDrug() == drug) {
                    if (invDrugItem.getQuantity() < quantity) {
                        JOptionPane.showMessageDialog(null, "Limited/ No stock. Quantity Inhand: " + invDrugItem.getQuantity());
                        return;
                    }

                }

            }

            for (DrugItem dim : drugItemList) {
                System.out.println(dim.getDrug().getDrugName());
                System.out.println(drug.getDrugName());
                if (dim.getDrug() == drug) {

                    dim.setQuantity(dim.getQuantity() + quantity);
                    dosageJTable.setValueAt(dim.getQuantity(), row, 3);
                    JOptionPane.showMessageDialog(null, "Quantity has been updated");
                    return;
                }

            }

            DrugItem drugItem = new DrugItem();
            drugItem.setDrug(drug);
            drugItem.setQuantity(quantity);
            drugItemList.add(drugItem);  //class variable

            dosageJTable.setValueAt(drugItem.getQuantity(), row, 3);
            JOptionPane.showMessageDialog(null, "Quantity has been added in the list");
        } else {

            JOptionPane.showMessageDialog(null, "The request cannot be fulfilled");
            return;
        }

    }//GEN-LAST:event_btnAddDrugsActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCompleteRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompleteRequestActionPerformed
        // TODO add your handling code here:
        int row = tblWorkRequest.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select an entry form the table", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        AddDrugWorkRequest adwr = (AddDrugWorkRequest) tblWorkRequest.getValueAt(row, 0);
        if (adwr.getStatus().equalsIgnoreCase("In progress")) {

            adwr.setStatus("Drugs delivered");
            JOptionPane.showMessageDialog(null, "Drugs have been delievered successfully");

            updateInventory();
            generateInvoice();
        } else {
            JOptionPane.showMessageDialog(null, "Request cannot be fulfilled.");
            return;
        }

    }//GEN-LAST:event_btnCompleteRequestActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:

        int row = tblWorkRequest.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select an entry form the table", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        AddDrugWorkRequest adwr = (AddDrugWorkRequest) tblWorkRequest.getValueAt(row, 0);
        // adwr.setDrugItemList(drugItemList);

        if (!(adwr.getStatus().equals("Request initiated"))) {

            JOptionPane.showMessageDialog(null, "The request has been picked up. Please select another request", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;

        }

        adwr.setReceiver(pharmacistUserAccount);
        adwr.setStatus("In progress");
        populateDrugRequest();


    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnShowPrescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowPrescriptionActionPerformed
        // TODO add your handling code here:

        int row = tblWorkRequest.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select an entry form the table", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        AddDrugWorkRequest adwr = (AddDrugWorkRequest) tblWorkRequest.getValueAt(row, 0);
        UserAccount patientAccount = adwr.getSender();
        Prescription p = adwr.getPrescription();
        ShowPrescriptionJPanel showPrescriptionJPanel = new ShowPrescriptionJPanel(userProcessContainer, p, patientAccount);
        userProcessContainer.add("showPrescriptionJPanel", showPrescriptionJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);


    }//GEN-LAST:event_btnShowPrescriptionActionPerformed

    public void generateInvoice() {

        GenerateBillJPanel generateBillJPanel = new GenerateBillJPanel(userProcessContainer, patient, drugItemList);
        userProcessContainer.add("generateBillJPanel", generateBillJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }

    public void updateInventory() {

        for (DrugItem drugItem : drugItemList) {
            for (DrugItem invDrugItem : drugInventory.getDrugInventory()) {
                if (drugItem.getDrug() == invDrugItem.getDrug()) {
                    invDrugItem.setQuantity(invDrugItem.getQuantity() - drugItem.getQuantity());
                    JOptionPane.showMessageDialog(null, "Inventory has been updated");

                }

            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddDrugs;
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCompleteRequest;
    private javax.swing.JButton btnShowPrescription;
    private javax.swing.JButton btnShowRequest;
    private javax.swing.JTable dosageJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner quantitySpinner;
    private javax.swing.JTable tblWorkRequest;
    // End of variables declaration//GEN-END:variables

}
