/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PharmacyRole;

import Business.Drug.Drug;
import Business.Drug.DrugInventory;
import Business.Drug.DrugItem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.PharmacyEnterprise;
import Business.Enterprise.SupplierEnterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.PharmacyOrganization;
import Business.Organization.SupplierOrganization;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AddInventoryWorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bhavna Menghrajani
 */
public class ManageDrugCatalogJPanel extends javax.swing.JPanel {

    private DrugInventory drugInventory;
    private PharmacyOrganization pharmacyOrganization;
    private PharmacyEnterprise pharmacyEnterprise;
    private Network network;
    private JPanel userProcessContainer;
    private Person pharmacist;
    private AddInventoryWorkRequest addInventoryWorkRequest;
    private ArrayList<DrugItem> drugItemList;
    private UserAccount userAccount;
    SupplierOrganization sp;

    /**
     * Creates new form ManageDrugCatalogJPanel
     */
    public ManageDrugCatalogJPanel(DrugInventory drugInventory, UserAccount userAccount, PharmacyOrganization pharmacyOrganization,
            Enterprise pharmacyEnterprise, Network network, JPanel userProcessContainer) {
        initComponents();
        this.drugInventory = drugInventory;
        this.pharmacyOrganization = pharmacyOrganization;
        this.pharmacyEnterprise = (PharmacyEnterprise) pharmacyEnterprise;
        this.network = network;
        this.userProcessContainer = userProcessContainer;
        this.pharmacist = (Person) userAccount.getPerson();
        this.userAccount = userAccount;
        addInventoryWorkRequest = new AddInventoryWorkRequest();
        drugItemList = new ArrayList<>();

        populateCombo();
        populatePharmacyCatalog();
        populateWishList();

    }

    public void populateWishList() {
        DefaultTableModel dtm = (DefaultTableModel) tblWishlist.getModel();
        dtm.setRowCount(0);

        for (DrugItem di : drugItemList) {
            Object row[] = new Object[4];
            row[0] = di.getDrug();
            row[1] = di.getDrug().getDrugName();
            row[2] = di.getQuantity();
            row[3] = di.getQuantity() * di.getDrug().getPrice();
            dtm.addRow(row);

        }

    }

    public void populatePharmacyCatalog() {
        DefaultTableModel dtm = (DefaultTableModel) tblDrugCatalog.getModel();
        dtm.setRowCount(0);

        for (DrugItem di : drugInventory.getDrugInventory()) {
            Object row[] = new Object[4];
            row[0] = di.getDrug().getDrugId();
            row[1] = di.getDrug().getDrugName();
            row[2] = di.getDrug().getPrice();
            row[3] = di.getQuantity();

            dtm.addRow(row);

        }

    }

    public void populateCombo() {
        supplierJComboBox.removeAllItems();
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (enterprise instanceof SupplierEnterprise) {

                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    supplierJComboBox.addItem(organization);

                }

            }
        }
        populateTable();

    }

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblSupplierCatalog.getModel();
        sp = (SupplierOrganization) supplierJComboBox.getSelectedItem();
        dtm.setRowCount(0);

        if (sp != null) {
            for (Drug d : sp.getDrugCatalog().getDrugCatalog()) {

                Object row[] = new Object[3];
                row[0] = d;
                row[1] = d.getDrugName();
                row[2] = d.getPrice();

                dtm.addRow(row);
            }

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        supplierJComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSupplierCatalog = new javax.swing.JTable();
        quantitySpinner = new javax.swing.JSpinner();
        btnAddDrug = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblDrugCatalog = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblWishlist = new javax.swing.JTable();
        btnRequest = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel1.setText("Manage Drug Catalog JPanel");
        add(jLabel1);
        jLabel1.setBounds(390, 10, 360, 31);

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel2.setText("Supplier");
        add(jLabel2);
        jLabel2.setBounds(20, 90, 54, 19);

        supplierJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierJComboBoxActionPerformed(evt);
            }
        });
        add(supplierJComboBox);
        supplierJComboBox.setBounds(140, 80, 160, 30);

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel3.setText("Supplier Drugs");
        add(jLabel3);
        jLabel3.setBounds(20, 120, 100, 19);

        tblSupplierCatalog.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        tblSupplierCatalog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug Id", "Drug Name", "Drug Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblSupplierCatalog);

        add(jScrollPane1);
        jScrollPane1.setBounds(20, 140, 995, 180);

        quantitySpinner.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        add(quantitySpinner);
        quantitySpinner.setBounds(1080, 207, 80, 40);

        btnAddDrug.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnAddDrug.setText("Add Drug to Cart");
        btnAddDrug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDrugActionPerformed(evt);
            }
        });
        add(btnAddDrug);
        btnAddDrug.setBounds(1080, 270, 300, 40);

        tblDrugCatalog.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        tblDrugCatalog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug Id", "Drug Name", "Price", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblDrugCatalog);

        add(jScrollPane4);
        jScrollPane4.setBounds(30, 560, 990, 275);

        btnBack.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(20, 30, 90, 31);

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel4.setText("Select the quantity:");
        add(jLabel4);
        jLabel4.setBounds(1080, 180, 128, 19);

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel5.setText("Store Catalog:");
        add(jLabel5);
        jLabel5.setBounds(30, 540, 96, 19);

        tblWishlist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug Id", "Drug Name", "Quantity", "Total Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblWishlist);

        add(jScrollPane5);
        jScrollPane5.setBounds(20, 340, 995, 186);

        btnRequest.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnRequest.setText("Request from the Supplier");
        btnRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestActionPerformed(evt);
            }
        });
        add(btnRequest);
        btnRequest.setBounds(1080, 420, 300, 40);

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/background2.jpg"))); // NOI18N
        jLabel6.setText("jLabel6");
        add(jLabel6);
        jLabel6.setBounds(0, 0, 1980, 1000);
    }// </editor-fold>//GEN-END:initComponents

    private void supplierJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierJComboBoxActionPerformed
        // TODO add your handling code here:
        populateTable();
        if (sp != (SupplierOrganization) supplierJComboBox.getSelectedItem()) {
            drugItemList = new ArrayList<>();
        }

        populateWishList();
    }//GEN-LAST:event_supplierJComboBoxActionPerformed

    private void btnAddDrugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDrugActionPerformed

// TODO add your handling code here:
        int reqdQty;
        int row = tblSupplierCatalog.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select an entry form the table", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        } else {
            reqdQty = (Integer) (quantitySpinner.getValue());
            if (reqdQty <= 0) {
                JOptionPane.showMessageDialog(null, "Quantity should be greater than zero", "Information", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            Drug drug = (Drug) tblSupplierCatalog.getValueAt(row, 0);
            for (DrugItem di : drugItemList) {
                if (di.getDrug().getDrugName() == drug.getDrugName()) {
                    di.setQuantity(di.getQuantity() + reqdQty);
                    populateWishList();
                    return;
                }

            }

            DrugItem drugItem = new DrugItem();
            drugItem.setDrug(drug);
            drugItem.setQuantity(reqdQty);
            drugItemList.add(drugItem);  //class variable
            populateWishList();
        }

    }//GEN-LAST:event_btnAddDrugActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestActionPerformed
        // TODO add your handling code here:
        SupplierOrganization sp = (SupplierOrganization) supplierJComboBox.getSelectedItem();

        if (drugItemList.size() < 0) {
            JOptionPane.showMessageDialog(null, "Your basket is empty");
            return;

        }

        addInventoryWorkRequest.setDrugItemList(drugItemList);
        sp.getWorkQueue().getWorkRequestList().add(addInventoryWorkRequest);
        pharmacyOrganization.getWorkQueue().getWorkRequestList().add(addInventoryWorkRequest);
        addInventoryWorkRequest.setMessage("Drugs required from " + pharmacyOrganization.getName());
        addInventoryWorkRequest.setSender(userAccount);
        addInventoryWorkRequest.setRequestDate(new Date());
        addInventoryWorkRequest.setStatus("Initiated");
        JOptionPane.showMessageDialog(null, " Request sent succesfully");

        GeneratePurchaseOrderJPanel generatePurchaseOrderJPanel = new GeneratePurchaseOrderJPanel(userProcessContainer, drugItemList, sp.getName());
        userProcessContainer.add("generatePurchaseOrderJPanel", generatePurchaseOrderJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);


    }//GEN-LAST:event_btnRequestActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddDrug;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JSpinner quantitySpinner;
    private javax.swing.JComboBox supplierJComboBox;
    private javax.swing.JTable tblDrugCatalog;
    private javax.swing.JTable tblSupplierCatalog;
    private javax.swing.JTable tblWishlist;
    // End of variables declaration//GEN-END:variables

}
