/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SupplierRole;

import Business.Drug.DrugItem;
import Business.Organization.SupplierOrganization;
import Business.Prescription.DrugItems;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AddDrugWorkRequest;
import Business.WorkQueue.AddInventoryWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bhavna Menghrajani
 */
public class ManageWorkRequest extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private SupplierOrganization supplierOrganization;
    private UserAccount userAccount;

    /**
     * Creates new form ManageWorkRequest
     */
    public ManageWorkRequest(JPanel userProcessContainer, UserAccount userAccount, SupplierOrganization supplierOrganization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.supplierOrganization = supplierOrganization;
        this.userAccount = userAccount;
        populateWorkRequest();

    }

    public void populateWorkRequest() {
        DefaultTableModel model = (DefaultTableModel) tblWorkRequest.getModel();

        model.setRowCount(0);

        for (WorkRequest request : supplierOrganization.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[7];
            row[0] = request;
            row[1] = request.getSender().getPerson().getFirstName();
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getPerson().getFirstName();
            row[3] = request.getMessage();
            row[4] = request.getRequestDate();
            row[5] = request.getResolveDate();
            row[6] = request.getStatus();

            model.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblWorkRequest = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDrugs = new javax.swing.JTable();
        btnShowRequest = new javax.swing.JButton();
        btnCompleteRequest = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnAssign = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setLayout(null);

        tblWorkRequest.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        tblWorkRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request", "Sender", "Receiver", "Message", "Request Date", "Resolve Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblWorkRequest);
        if (tblWorkRequest.getColumnModel().getColumnCount() > 0) {
            tblWorkRequest.getColumnModel().getColumn(0).setMinWidth(0);
            tblWorkRequest.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblWorkRequest.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(80, 80, 1180, 227);

        tblDrugs.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        tblDrugs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Drug Id", "Drug Name", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblDrugs);

        add(jScrollPane2);
        jScrollPane2.setBounds(80, 410, 826, 197);

        btnShowRequest.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnShowRequest.setText("Show Request details");
        btnShowRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowRequestActionPerformed(evt);
            }
        });
        add(btnShowRequest);
        btnShowRequest.setBounds(80, 330, 240, 40);

        btnCompleteRequest.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnCompleteRequest.setText("Complete Drug Request");
        btnCompleteRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompleteRequestActionPerformed(evt);
            }
        });
        add(btnCompleteRequest);
        btnCompleteRequest.setBounds(990, 330, 250, 40);

        btnBack.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(80, 30, 80, 31);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel1.setText("Manage Work Request");
        add(jLabel1);
        jLabel1.setBounds(380, 30, 270, 31);

        btnAssign.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnAssign.setText("Assign this to me");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        add(btnAssign);
        btnAssign.setBounds(510, 330, 240, 40);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/background2.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        add(jLabel2);
        jLabel2.setBounds(0, 0, 1920, 950);
    }// </editor-fold>//GEN-END:initComponents

    private void btnShowRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowRequestActionPerformed
        // TODO add your handling code here:

        int row = tblWorkRequest.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select an entry form the table", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        DefaultTableModel dtm = (DefaultTableModel) tblDrugs.getModel();
        dtm.setRowCount(0);

        AddInventoryWorkRequest aiwr = (AddInventoryWorkRequest) tblWorkRequest.getValueAt(row, 0);
        for (DrugItem di : aiwr.getDrugItemList()) {
            Object r[] = new Object[6];
            r[0] = di.getDrug();
            r[1] = di.getDrug().getDrugName();
            r[2] = di.getQuantity();
            dtm.addRow(r);

        }


    }//GEN-LAST:event_btnShowRequestActionPerformed

    private void btnCompleteRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompleteRequestActionPerformed
        // TODO add your handling code here:

        int row = tblWorkRequest.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select an entry form the table", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        AddInventoryWorkRequest aiwr = (AddInventoryWorkRequest) tblWorkRequest.getValueAt(row, 0);
        if (aiwr.getStatus().equals("Completed") || aiwr.getStatus().equals("Closed")) {
            JOptionPane.showMessageDialog(null, "This request has already been fulfilled");
            return;
        }   
        if(aiwr.getReceiver() == null)
        {
            JOptionPane.showMessageDialog(null, "Please pick up the request first");
            return;
        }
        aiwr.setStatus("Completed");
        aiwr.setResolveDate(new Date());
        JOptionPane.showMessageDialog(null, "The request has been completed succesfully");
        populateWorkRequest();


    }//GEN-LAST:event_btnCompleteRequestActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:

        int row = tblWorkRequest.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select an entry form the table", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        AddInventoryWorkRequest awr = (AddInventoryWorkRequest) tblWorkRequest.getValueAt(row, 0);
        if (!(awr.getStatus().equals("Initiated"))) {
            JOptionPane.showMessageDialog(null, "The request has been picked up. Please select another request", "Information", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if(awr.getReceiver() == null)
        {
        awr.setReceiver(userAccount);
        awr.setStatus("In progress");
        populateWorkRequest();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "The request has already been picked up");
        }
        
        
    }//GEN-LAST:event_btnAssignActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCompleteRequest;
    private javax.swing.JButton btnShowRequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblDrugs;
    private javax.swing.JTable tblWorkRequest;
    // End of variables declaration//GEN-END:variables

}
